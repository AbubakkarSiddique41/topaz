# compstmt: line* statement? LINE_END?;
# unfortunately you need to inline this anywhere you want it because ebnf parse
# doesn't support epsilon productions.

IGNORE: "[ ]";
LINE_END: "[\n;]";

INTEGER: "[0-9]+";
IDENTIFIER: "[a-zA-Z_][a-zA-Z0-9_]*";

CMP_OPER: "(!=)|(==)|(<=)|(>=)|<|>";
ADD_OPER: "[+-]";
MUL_OPER: "[*]";

main: line* statement? LINE_END? [EOF];

line: statement? LINE_END;

statement: "return" expr |
            expr;

expr: assignment |
      arg;

assignment: lhs "=" rhs;

lhs: IDENTIFIER;

rhs: arg;

arg: comparison;

comparison: additive CMP_OPER comparison | additive;
additive: multitive ADD_OPER additive | multitive;
multitive: primary MUL_OPER multitive | primary;

primary: "(" expr ")" |
         "if" expr then line* statement? LINE_END? "end" |
         "while" expr do line* statement? LINE_END? "end" |
         send |
         IDENTIFIER |
         literal;

then: LINE_END |
      "then" |
      LINE_END "then";

do: LINE_END |
    "do" |
    LINE_END "do";

send: operation send_args;

operation: IDENTIFIER;

send_args: args;

args: arg "," args | arg;

literal: INTEGER;
