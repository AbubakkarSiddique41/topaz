fails:Module#autoload? returns the name of the file that will be autoloaded
fails:Module#autoload? returns nil if no file has been registered for a constant
fails:Module#autoload registers a file to load the first time the named constant is accessed
fails:Module#autoload loads the registered constant into a dynamically created class
fails:Module#autoload loads the registered constant into a dynamically created module
fails:Module#autoload ignores the autoload request if the file is already loaded
fails:Module#autoload retains the autoload even if the request to require fails
fails:Module#autoload does not load the file when removing an autoload constant
fails:Module#autoload calls #to_path on non-string filenames
fails:Module#autoload raises an ArgumentError when an empty filename is given
fails:Module#autoload shares the autoload request across dup'ed copies of modules
fails:Module#autoload raises a TypeError if opening a class with a different superclass than the class defined in the autoload file
fails:Module#autoload raises a TypeError if not passed a String or object respodning to #to_path for the filename
fails:Module#autoload calls #to_path on non-String filename arguments
fails:Module#autoload (concurrently) blocks a second thread while a first is doing the autoload
